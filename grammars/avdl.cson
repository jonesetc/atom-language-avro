'scopeName': 'source.avdl'
'name': 'Avro IDL (avdl)'
'fileTypes': [
    'avdl'
]
'patterns': [
    {
        'begin': '//'
        'end': '\\n'
        'name': 'comment.line.double-slash.avdl'
    }
    {
        'begin': '/\\*'
        'end': '\\*/'
        'name': 'comment.block.avdl'
    }
    {
        'begin': '"'
        'end': '"'
        'name': 'string.quoted.double.avdl'
    }
    {
        'match': '\\b(?:boolean|string|bytes|int|float|long|double)\\b'
        'name': 'storage.type.primitive.avdl'
    }
    {
        'match': '\\b(?:array)\\b'
        'name': 'storage.type.array.avdl'
    }
    {
        'match': '\\b(?:union)\\b'
        'name': 'storage.type.union.avdl'
    }
    {
        'match': '\\b(?:map)\\b'
        'name': 'storage.type.map.avdl'
    }
    {
        'match': '(?<!\\.)\\btrue(?!\\s*:)\\b'
        'name': 'constant.language.boolean.true.avdl'
    }
    {
        'match': '(?<!\\.)\\bfalse(?!\\s*:)\\b'
        'name': 'constant.language.boolean.false.avdl'
    }
    {
        'match': '(?<!\\.)\\bnull(?!\\s*:)\\b'
        'name': 'constant.language.null.avdl'
    }
    {
        'match': '\\b(record)\\s+(\\w+(?:\\.\\w*)?)'
        'captures':
            '1':
                'name': 'storage.type.class.avdl'
            '2':
                'name': 'entity.name.type.avdl'
        'name': 'meta.class.avdl'
    }
    {
        'match': '\\b(enum)\\s+(\\w+(?:\\.\\w*)?)'
        'captures':
            '1':
                'name': 'storage.type.enum.avdl'
            '2':
                'name': 'entity.name.type.avdl'
        'name': 'meta.enum.avdl'
    }
    {
        'match': '\\b(protocol)\\s+(\\w+(?:\\.\\w*)?)'
        'captures':
            '1':
                'name': 'storage.type.protocol.avdl'
            '2':
                'name': 'entity.name.type.avdl'
        'name': 'meta.protocol.avdl'
    }
    {
        'match': '\\b(?:@namespace)\\b'
        'name': 'storage.type.namespace.avdl'
    }
    {
        'match': '\\b(?:@aliases)\\b'
        'name': 'storage.type.aliases.avdl'
    }
]
# 'repository':
#     'numbers':
#         'patterns': [
#             {
#                 'match': '\\b((0(x|X)[0-9a-fA-F]+)|(0(b|B)[01]+)|(0(o|O)[0-7]+)|([0-9]+(\\.[0-9]+)?)((e|E)[+-]?[0-9]+)?)\\b'
#                 'name': 'constant.numeric.avdl'
#             }
#         ]
#     'strings':
#         'patterns': [
#             {
#                 'begin': '"'
#                 'end': '"'
#                 'name': 'string.quoted.double.avdl'
#             }
#         ]
